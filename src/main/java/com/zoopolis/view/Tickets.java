/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.zoopolis.view;


import com.zoopolis.model.Zoopolis;
import java.awt.Color;
import java.util.ArrayList;

/**
 *
 * @author Josinwua
 */
public class Tickets extends javax.swing.JFrame {

    /**
     * Creates new form Index
     */
    public static ArrayList temporal;

    public Tickets() {
        initComponents();
        rbNO.setVisible(false);
        rbSI.setVisible(false);
        lblParqueadero.setVisible(false);
        btnTicket.setForeground(new java.awt.Color(1, 196, 76));
        btnTicket.setFont(new java.awt.Font("Arial", 1, 25));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        frmCompra = new javax.swing.JFrame();
        panTicket = new javax.swing.JPanel();
        lblLogo = new javax.swing.JLabel();
        lblTicket = new javax.swing.JLabel();
        lblMoto = new javax.swing.JLabel();
        lblCarro = new javax.swing.JLabel();
        lblValor = new javax.swing.JLabel();
        lblLabel = new javax.swing.JLabel();
        lblParqueadero = new javax.swing.JLabel();
        rbSI = new javax.swing.JRadioButton();
        rbNO = new javax.swing.JRadioButton();
        lblColorDescripcion = new javax.swing.JLabel();
        lblColorPrecio = new javax.swing.JLabel();
        btnComprar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tpnDescripcion = new javax.swing.JTextPane();
        lblTitulo = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane3 = new javax.swing.JTextPane();
        spnCantidad = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblPrecio = new javax.swing.JLabel();
        bntInicio = new javax.swing.JButton();
        btnTicket = new javax.swing.JButton();
        btnPlanes = new javax.swing.JButton();
        btnAdmin = new javax.swing.JButton();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        frmCompra.setAutoRequestFocus(false);
        frmCompra.setResizable(false);
        frmCompra.setType(java.awt.Window.Type.POPUP);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ZOOPOLIS - Ticket");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panTicket.setBackground(new java.awt.Color(255, 255, 255));
        panTicket.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Logo.png"))); // NOI18N
        panTicket.add(lblLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 300, 90));

        lblTicket.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Ticket.png"))); // NOI18N
        panTicket.add(lblTicket, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 480, 290));

        lblMoto.setFont(new java.awt.Font("Arial", 1, 17)); // NOI18N
        lblMoto.setText("Parqueadero Moto      Valor     $9.900");
        panTicket.add(lblMoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 610, 310, 20));

        lblCarro.setFont(new java.awt.Font("Arial", 1, 17)); // NOI18N
        lblCarro.setText("Parqueadero Carro     Valor     $15.000");
        panTicket.add(lblCarro, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 630, 320, 20));

        lblValor.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        lblValor.setForeground(new java.awt.Color(255, 255, 255));
        lblValor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblValor.setText("70000");
        lblValor.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        panTicket.add(lblValor, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 500, 250, 70));

        lblLabel.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        lblLabel.setForeground(new java.awt.Color(255, 255, 255));
        lblLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLabel.setText("Valor:         $");
        lblLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        panTicket.add(lblLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 500, 340, 70));

        lblParqueadero.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        lblParqueadero.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblParqueadero.setText("¿Hará uso del servicio de parqueadero?");
        lblParqueadero.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        panTicket.add(lblParqueadero, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 600, 370, 60));

        buttonGroup1.add(rbSI);
        rbSI.setText("SI");
        rbSI.setBorder(null);
        rbSI.setContentAreaFilled(false);
        rbSI.setFocusPainted(false);
        rbSI.setFocusable(false);
        rbSI.setRequestFocusEnabled(false);
        rbSI.setRolloverEnabled(false);
        rbSI.setVerifyInputWhenFocusTarget(false);
        panTicket.add(rbSI, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 606, 45, 50));

        buttonGroup1.add(rbNO);
        rbNO.setText("NO");
        rbNO.setBorder(null);
        rbNO.setContentAreaFilled(false);
        rbNO.setFocusPainted(false);
        rbNO.setFocusable(false);
        rbNO.setRequestFocusEnabled(false);
        rbNO.setRolloverEnabled(false);
        rbNO.setVerifyInputWhenFocusTarget(false);
        panTicket.add(rbNO, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 606, 45, 50));

        lblColorDescripcion.setBackground(new java.awt.Color(217, 217, 217));
        lblColorDescripcion.setOpaque(true);
        panTicket.add(lblColorDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 600, 461, 64));

        lblColorPrecio.setBackground(new java.awt.Color(0, 0, 0));
        lblColorPrecio.setOpaque(true);
        lblColorPrecio.setRequestFocusEnabled(false);
        lblColorPrecio.setVerifyInputWhenFocusTarget(false);
        panTicket.add(lblColorPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 500, 460, 70));

        btnComprar.setBackground(new java.awt.Color(0, 0, 0));
        btnComprar.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        btnComprar.setForeground(new java.awt.Color(255, 255, 255));
        btnComprar.setText("COMPRAR");
        btnComprar.setBorder(null);
        btnComprar.setBorderPainted(false);
        btnComprar.setContentAreaFilled(false);
        btnComprar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnComprar.setDefaultCapable(false);
        btnComprar.setFocusPainted(false);
        btnComprar.setFocusable(false);
        btnComprar.setOpaque(true);
        btnComprar.setRequestFocusEnabled(false);
        btnComprar.setRolloverEnabled(false);
        btnComprar.setVerifyInputWhenFocusTarget(false);
        btnComprar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComprarActionPerformed(evt);
            }
        });
        panTicket.add(btnComprar, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 580, 300, 82));

        jScrollPane2.setBorder(null);
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        tpnDescripcion.setEditable(false);
        tpnDescripcion.setBackground(new java.awt.Color(255, 255, 255));
        tpnDescripcion.setBorder(null);
        tpnDescripcion.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tpnDescripcion.setText("-  Acceso a todas las áreas públicas del zoológico, y los programas educativos.\n\n-  Mapas y guías para ayudar a los visitantes a navegar por el zoológico.\n\n- Acceso a servicios como baños, áreas de descanso y restaurantes.\n\n- NO INCLUYE PARQUEADERO"); // NOI18N
        tpnDescripcion.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tpnDescripcion.setDoubleBuffered(true);
        tpnDescripcion.setFocusCycleRoot(false);
        tpnDescripcion.setFocusable(false);
        tpnDescripcion.setRequestFocusEnabled(false);
        tpnDescripcion.setVerifyInputWhenFocusTarget(false);
        jScrollPane2.setViewportView(tpnDescripcion);

        panTicket.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 220, 410, 210));

        lblTitulo.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("TICKET ESTÁNDAR");
        panTicket.add(lblTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 170, 410, -1));

        jScrollPane3.setBorder(null);
        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        jTextPane3.setEditable(false);
        jTextPane3.setBackground(new java.awt.Color(255, 255, 255));
        jTextPane3.setBorder(null);
        jTextPane3.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        jTextPane3.setText("* HORA DE APERTURA DE PUERTAS: 8:50AM\n* HORA DE LOS RECORRIDOS: 9AM A LAS 4PM (INICIO CADA HORA)");
        jTextPane3.setAutoscrolls(false);
        jTextPane3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTextPane3.setFocusCycleRoot(false);
        jTextPane3.setFocusable(false);
        jTextPane3.setRequestFocusEnabled(false);
        jTextPane3.setVerifyInputWhenFocusTarget(false);
        jScrollPane3.setViewportView(jTextPane3);

        panTicket.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 450, 480, 40));

        spnCantidad.setFont(new java.awt.Font("Arial", 0, 25)); // NOI18N
        spnCantidad.setModel(new javax.swing.SpinnerNumberModel(0, 0, 1000, 1));
        spnCantidad.setBorder(null);
        spnCantidad.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        spnCantidad.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        spnCantidad.setFocusable(false);
        spnCantidad.setRequestFocusEnabled(false);
        spnCantidad.setVerifyInputWhenFocusTarget(false);
        spnCantidad.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnCantidadStateChanged(evt);
            }
        });
        panTicket.add(spnCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 460, 90, 50));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 25)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("PRECIO: $");
        panTicket.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 520, 130, 50));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 25)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("CANTIDAD:");
        panTicket.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 460, 140, 50));

        lblPrecio.setFont(new java.awt.Font("Arial", 0, 25)); // NOI18N
        lblPrecio.setText("0");
        panTicket.add(lblPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 520, 240, 50));

        bntInicio.setFont(new java.awt.Font("Arial", 0, 25)); // NOI18N
        bntInicio.setText("Inicio");
        bntInicio.setBorder(null);
        bntInicio.setBorderPainted(false);
        bntInicio.setContentAreaFilled(false);
        bntInicio.setDefaultCapable(false);
        bntInicio.setFocusPainted(false);
        bntInicio.setFocusable(false);
        bntInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntInicioActionPerformed(evt);
            }
        });
        panTicket.add(bntInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 50, 100, 50));

        btnTicket.setFont(new java.awt.Font("Arial", 0, 25)); // NOI18N
        btnTicket.setText("Ticket");
        btnTicket.setBorder(null);
        btnTicket.setBorderPainted(false);
        btnTicket.setContentAreaFilled(false);
        btnTicket.setDefaultCapable(false);
        btnTicket.setFocusPainted(false);
        btnTicket.setFocusable(false);
        btnTicket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTicketActionPerformed(evt);
            }
        });
        panTicket.add(btnTicket, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 50, 100, 50));

        btnPlanes.setFont(new java.awt.Font("Arial", 0, 25)); // NOI18N
        btnPlanes.setText("Planes");
        btnPlanes.setBorder(null);
        btnPlanes.setBorderPainted(false);
        btnPlanes.setContentAreaFilled(false);
        btnPlanes.setDefaultCapable(false);
        btnPlanes.setFocusPainted(false);
        btnPlanes.setFocusable(false);
        btnPlanes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlanesActionPerformed(evt);
            }
        });
        panTicket.add(btnPlanes, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 50, 100, 50));

        btnAdmin.setFont(new java.awt.Font("Arial", 0, 25)); // NOI18N
        btnAdmin.setText("Admin");
        btnAdmin.setBorder(null);
        btnAdmin.setBorderPainted(false);
        btnAdmin.setContentAreaFilled(false);
        btnAdmin.setDefaultCapable(false);
        btnAdmin.setFocusPainted(false);
        btnAdmin.setFocusable(false);
        btnAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminActionPerformed(evt);
            }
        });
        panTicket.add(btnAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 50, 100, 50));

        getContentPane().add(panTicket, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 700));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnTicketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTicketActionPerformed
        Index.irTicket();
        dispose();
    }//GEN-LAST:event_btnTicketActionPerformed

    private void bntInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntInicioActionPerformed
        Index.irInicio();
        dispose();
    }//GEN-LAST:event_bntInicioActionPerformed

    private void btnPlanesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlanesActionPerformed
        Index.irPlanes();
        dispose();
    }//GEN-LAST:event_btnPlanesActionPerformed

    private void btnAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminActionPerformed
        Zoopolis.setValidarAccion(true);
        Index.iniciarSesion();
        if(Zoopolis.getAdminValido()){
             dispose();
         }
    }//GEN-LAST:event_btnAdminActionPerformed

    private void btnComprarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComprarActionPerformed
        temporal = new ArrayList();
        temporal.add(lblTitulo.getText());
        temporal.add(spnCantidad.getValue().toString());
        temporal.add(lblValor.getText());
        temporal.add(lblPrecio.getText());
        temporal.add(tpnDescripcion.getText());
        Compra compra = new Compra(frmCompra, true);
        compra.setVisible(true);
    }//GEN-LAST:event_btnComprarActionPerformed

    private void spnCantidadStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnCantidadStateChanged
        mostrarPrecio();
    }//GEN-LAST:event_spnCantidadStateChanged
    
    public int sumarValor(){
        int valor = Integer.parseInt(lblValor.getText());
        int precio = valor * Integer.parseInt(spnCantidad.getValue().toString()); 
        return precio;
    }
    
    public void mostrarPrecio(){
        lblPrecio.setText(Integer.toString(sumarValor()));      
    }
    
    
    public void cambiarApariencia(char n) {

        switch (n) {
            case '1':
                lblTitulo.setText("AVENTURA FELINA");
                lblTitulo.setForeground(new java.awt.Color(255, 93, 0));
                lblTicket.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/PlanFelino.png")));
                lblValor.setText("120000");
                lblColorDescripcion.setBackground(new java.awt.Color(251, 240, 227));
                cambiarColor(Color.decode("#FF5D00"));
                tpnDescripcion.setText("""
                                       - Encuentro con los cuidadores
                                       
                                       - Visita a la seccion de felinos
                                       
                                       - Alimentación de los felinos
                                       
                                       - Interacción con los felinos
                                       
                                       - Sesión de fotos
                                       
                                       - Incluye servicio de parqueadero
                                       """);
                mostrarYQuitar();

                break;
            case '2':
                lblTitulo.setText("AVENTURA REPTILIANA");
                lblTitulo.setForeground(new java.awt.Color(0, 198, 47));
                lblTicket.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/PlanReptiliano.png")));
                lblValor.setText("180000");
                lblColorDescripcion.setBackground(new java.awt.Color(227, 251, 230));
                cambiarColor(Color.decode("#00C62F"));
                tpnDescripcion.setText("""
                                       - La aventura en el zoológico reptiliano es una emocionante experiencia en la que los visitantes pueden explorar y aprender sobre una gran variedad de reptiles fascinantes. 
                                       
                                       - Los visitantes pueden caminar por senderos serpenteantes que atraviesan una selva tropical artificial, pasando por estanques llenos de caimanes y lagartos de todos los tamaños. 
                                       
                                       - El zoológico también cuenta con exhibiciones educativas sobre la importancia de los reptiles en los ecosistemas y los esfuerzos de conservación para proteger a estas criaturas de la extinción.
                                       
                                       """);
                mostrarYQuitar();
                break;
            case '3':
                lblTitulo.setText("AVENTURA ACUATICA");
                lblTitulo.setForeground(new java.awt.Color(30, 0, 184));
                lblTicket.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/PlanAcuatico.png")));
                lblValor.setText("210000");
                lblColorDescripcion.setBackground(new java.awt.Color(227, 240, 251));
                cambiarColor(Color.decode("#1E00B8"));
                tpnDescripcion.setText("""
                                       - La aventura acuática en el zoológico es una emocionante experiencia en la que los visitantes pueden explorar y aprender sobre la vida marina en un ambiente controlado y seguro. 
                                       
                                       Desde pequeñas criaturas acuáticas hasta grandes depredadores marinos, el zoológico ofrece una amplia variedad de especies para admirar y aprender.
                                       
                                       Contamos con áreas interactivas donde los visitantes pueden tocar y alimentar a ciertas especies, como las rayas y las tortugas marinas.
                                       
                                       El zoológico también cuenta con exhibiciones educativas sobre la importancia de los ecosistemas marinos y los esfuerzos de conservación para proteger a las especies acuáticas de la extinción.
                                       
                                       """);
                mostrarYQuitar();
                break;
            case '4':
                lblTitulo.setText("AVENTURA TROPICAL");
                lblTitulo.setForeground(new java.awt.Color(0, 198, 163));
                lblTicket.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/PlanTropical.png")));
                lblValor.setText("280000");
                lblColorDescripcion.setBackground(new java.awt.Color(227, 251, 245));
                cambiarColor(Color.decode("#00C6A3"));
                tpnDescripcion.setText("ESTO ES UN PRUEBA ESPERO QUE SI FUNCIONE\n *Me encanta el zoologico");
                tpnDescripcion.setText("""
                                       - La aventura tropical en el zoológico es una experiencia emocionante en la que los visitantes pueden explorar y aprender sobre una gran variedad de animales exóticos y coloridos de los trópicos.
                                       
                                       Desde monos y tucanes hasta jaguares y elefantes, el zoológico ofrece la oportunidad de ver de cerca a estas criaturas en su hábitat natural.
                                       
                                       Contamos con áreas interactivas donde los visitantes pueden tocar y alimentar a ciertas especies, como las aves y los pequeños mamíferos.
                                       
                                       El zoológico también cuenta con exhibiciones educativas sobre la importancia de los ecosistemas tropicales y los esfuerzos de conservación para proteger a estas especies de la extinción.
                                       
                                       """);
                mostrarYQuitar();
                break;
            case '5':
                lblTitulo.setText("AVENTURA ANIMAL TOTAL");
                lblTitulo.setForeground(new java.awt.Color(241, 0, 23));
                lblValor.setText("350000");
                lblColorDescripcion.setBackground(new java.awt.Color(251, 227, 227));
                cambiarColor(Color.decode("#F10017"));
               
                lblTicket.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/PlanAnimalTotal.png")));
                tpnDescripcion.setText("""
                                       - LLa aventura total en el zoológico es una experiencia emocionante y completa en la que los visitantes pueden explorar y aprender sobre una amplia variedad de animales de todo el mundo en diferentes ambientes.
                                       
                                       Desde los reptiles más letales hasta las criaturas más adorables y peludas, el zoológico ofrece una oportunidad única para conocer y admirar la diversidad del mundo animal.
                                       
                                       En cada área, los visitantes pueden ver animales como tigres, elefantes, osos polares, jirafas, pingüinos, y mucho más.
                                       
                                       Contamos con áreas interactivas donde los visitantes pueden tocar y alimentar a ciertas especies, como las cabras o los loros.
                                       
                                       """);
                 mostrarYQuitar();
                break;
            default:
                throw new AssertionError();
        }

    }

    public void mostrarYQuitar() {
        rbNO.setVisible(true);
        rbSI.setVisible(true);
        lblCarro.setVisible(false);
        lblMoto.setVisible(false);
        lblParqueadero.setVisible(true);

    }

    public void cambiarColor(java.awt.Color color) {
        lblLabel.setFont(new java.awt.Font("Arial", 1, 36));
        lblColorPrecio.setBackground(color);
        btnComprar.setBackground(color);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tickets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tickets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tickets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tickets.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tickets().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntInicio;
    private javax.swing.JButton btnAdmin;
    private javax.swing.JButton btnComprar;
    private javax.swing.JButton btnPlanes;
    private javax.swing.JButton btnTicket;
    private javax.swing.ButtonGroup buttonGroup1;
    private static javax.swing.JFrame frmCompra;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextPane jTextPane3;
    private javax.swing.JLabel lblCarro;
    private javax.swing.JLabel lblColorDescripcion;
    private javax.swing.JLabel lblColorPrecio;
    private javax.swing.JLabel lblLabel;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblMoto;
    private javax.swing.JLabel lblParqueadero;
    private javax.swing.JLabel lblPrecio;
    private static javax.swing.JLabel lblTicket;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JLabel lblValor;
    private javax.swing.JPanel panTicket;
    private javax.swing.JRadioButton rbNO;
    private javax.swing.JRadioButton rbSI;
    private javax.swing.JSpinner spnCantidad;
    private javax.swing.JTextPane tpnDescripcion;
    // End of variables declaration//GEN-END:variables
}
